// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { EcrImageArgs } from "./ecrImage";
export type EcrImage = import("./ecrImage").EcrImage;
export const EcrImage: typeof import("./ecrImage").EcrImage = null as any;
utilities.lazyLoad(exports, ["EcrImage"], () => require("./ecrImage"));

export { EcsServiceArgs } from "./ecsService";
export type EcsService = import("./ecsService").EcsService;
export const EcsService: typeof import("./ecsService").EcsService = null as any;
utilities.lazyLoad(exports, ["EcsService"], () => require("./ecsService"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ipidp:aws_ecs_service/service:EcrImage":
                return new EcrImage(name, <any>undefined, { urn })
            case "ipidp:aws_ecs_service/service:EcsService":
                return new EcsService(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ipidp", "aws_ecs_service/service", _module)
